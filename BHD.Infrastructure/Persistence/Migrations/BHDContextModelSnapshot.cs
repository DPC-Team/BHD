// <auto-generated />
using System;
using BHD.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BHD.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(BHDContext))]
    partial class BHDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BHD.Domain.Entities.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool?>("Activa")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("BHD.Domain.Entities.Transaccione", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DestinoCuentaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(13,2)");

                    b.Property<int>("OrigenCuentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinoCuentaId");

                    b.HasIndex("OrigenCuentaId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("BHD.Domain.Entities.Transaccione", b =>
                {
                    b.HasOne("BHD.Domain.Entities.Cuenta", "DestinoCuenta")
                        .WithMany("TransaccioneDestinoCuenta")
                        .HasForeignKey("DestinoCuentaId")
                        .IsRequired()
                        .HasConstraintName("FK_Transacciones_Cuentas1");

                    b.HasOne("BHD.Domain.Entities.Cuenta", "OrigenCuenta")
                        .WithMany("TransaccioneOrigenCuenta")
                        .HasForeignKey("OrigenCuentaId")
                        .IsRequired()
                        .HasConstraintName("FK_Transacciones_Cuentas");

                    b.Navigation("DestinoCuenta");

                    b.Navigation("OrigenCuenta");
                });

            modelBuilder.Entity("BHD.Domain.Entities.Cuenta", b =>
                {
                    b.Navigation("TransaccioneDestinoCuenta");

                    b.Navigation("TransaccioneOrigenCuenta");
                });
#pragma warning restore 612, 618
        }
    }
}
